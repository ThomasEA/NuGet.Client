<Project ToolsVersion="15.0">
  <!-- Compiler flags -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' OR '$(TargetFramework)' == 'net46' ">
    <DefineConstants>$(DefineConstants);IS_DESKTOP</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.0' OR '$(TargetFramework)' == 'netcoreapp1.1' OR'$(TargetFramework)' == 'netstandard1.0' OR '$(TargetFramework)' == 'netstandard1.3' OR '$(TargetFramework)' == 'netstandard1.4' OR '$(TargetFramework)' == 'netstandard1.5' OR '$(TargetFramework)' == 'netstandard1.6' ">
    <DefineConstants>$(DefineConstants);IS_CORECLR</DefineConstants>
  </PropertyGroup>

  <!-- Include shared files for netcore projects -->
  <ItemGroup Condition=" '$(IsNetCoreProject)' == 'true' AND '$(SkipShared)' != 'true' AND '$(TestProject)' != 'true' ">
    <Compile Include="$(SharedDirectory)\*.cs" Exclude="bin\**;obj\**;**\*.xproj;packages\**" />
  </ItemGroup>

  <!-- Set the output location for all non-test projects -->
  <!-- Test projects currently fail when the output dir is moved -->
  <PropertyGroup Condition=" '$(TestProject)' != 'true' AND '$(IsNetCoreProject)' != 'true' ">
    <OutDirFx>$(VisualStudioVersion)\$(Configuration)\</OutDirFx>
    <OutputPath>$(ArtifactRoot)\$(MSBuildProjectName)\$(OutDirFx)</OutputPath>
    <OutputPath>$([System.IO.Path]::GetFullPath( $(OutputPath) ))\</OutputPath>
    <OutDir>$(OutputPath)</OutDir>
    <IntermediateOutputPath>$(ArtifactRoot)\$(MSBuildProjectName)\.obj\$(OutDirFx)</IntermediateOutputPath>
    <IntermediateOutputPath>$([System.IO.Path]::GetFullPath( $(IntermediateOutputPath) ))\</IntermediateOutputPath>
    <AppxPackageDir>$(OutputPath)</AppxPackageDir>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TestProject)' != 'true' AND '$(IsNetCoreProject)' == 'true' ">
    <BaseIntermediateOutputPath>$(ArtifactsDirectory)$(MSBuildProjectName)\$(VisualStudioVersion)\obj\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)\$(Configuration)\</IntermediateOutputPath>
    <BaseOutputPath>$(ArtifactsDirectory)$(MSBuildProjectName)\$(VisualStudioVersion)\bin\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)\$(Configuration)\</OutputPath>
  </PropertyGroup>

  <!-- Assembly attributes -->
  <ItemGroup Condition=" '$(SkipAssemblyAttributes)' == 'true' ">
    <!--
      AssemblyVersion and AssemblyFileVersion attributes are generated automatically for every build.
      NuGet package version is derived from AssemblyFileVersion.
    -->
    <AssemblyAttributes Include="AssemblyVersion">
      <_Parameter1>$(SemanticVersion).$(PreReleaseVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyFileVersion">
      <_Parameter1>$(SemanticVersion).$(PreReleaseVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyInformationalVersion">
      <_Parameter1>$(SemanticVersion)$(PreReleaseInformationVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyCompany">
      <_Parameter1>Microsoft Corporation</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyProduct">
      <_Parameter1>NuGet</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyCopyright">
      <_Parameter1>Microsoft Corporation. All rights reserved.</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="System.Resources.NeutralResourcesLanguage">
      <_Parameter1>en-US</_Parameter1>
    </AssemblyAttributes>
  </ItemGroup>

  <!-- Projects that ship -->
  <ImportGroup Condition=" '$(Shipping)' == 'true' ">
    <Import Project="sign.targets" />
  </ImportGroup>

  <!-- These are needed because currently a VSIX project cannot reference a net core project that multi targets -->
  <Target Name="BuiltProjectOutputGroupDependencies" Condition=" '$(IsNetCoreProject)' == 'true' " />
  <Target Name="BuiltProjectOutputGroup" Condition=" '$(IsNetCoreProject)' == 'true' " />
  <Target Name="GetCopyToOutputDirectoryItems" Condition=" '$(IsNetCoreProject)' == 'true' " />
  <Target Name="SatelliteDllsProjectOutputGroup" Condition=" '$(IsNetCoreProject)' == 'true' " />
  <Target Name="DebugSymbolsProjectOutputGroup" Condition=" '$(IsNetCoreProject)' == 'true' " />

  <!-- Test Projects -->
  <ImportGroup Condition=" '$(TestProject)' == 'true' ">
    <Import Project="test.targets" />
  </ImportGroup>

  <PropertyGroup Condition=" '$(IsNetCoreProject)' == 'true' ">
    <SchemaVersion>2.0</SchemaVersion>
    <TypeScriptCompileBlocked>True</TypeScriptCompileBlocked>
    <ProduceOutputsOnBuild>True</ProduceOutputsOnBuild>
  </PropertyGroup>

  <!--
    ============================================================
    TestProject
    Runs tests on the current project if it is a test project.
    ============================================================
  -->
  <Target Name="TestProject" Condition=" '$(TestProject)' == 'true' " DependsOnTargets="VSTest">
    <Message Text="Tested project $(MSBuildProjectName)" Importance="high"  />
  </Target>

  <!--
    ============================================================
    PackProject hook
    Packs the current project if it is marked as a pack project.
    ============================================================
  -->
  <!-- Create nupkg hook -->
  <PropertyGroup Condition=" '$(PackProject)' == 'true' AND '$(PackProjects)' == 'true' AND '$(VisualStudioVersion)' == '15.0' ">
    <IsInnerBuildForPack Condition=" '$(TargetFrameworks)' != '' AND '$(TargetFramework)' != '' ">true</IsInnerBuildForPack>
    <EnablePackTarget Condition=" '$(IsInnerBuildForPack)' != 'true' ">true</EnablePackTarget>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(EnablePackTarget)' == 'true' AND '$(CustomPack)' != 'true' ">
    <IsPackable>true</IsPackable>
    <IncludeSymbols Condition=" '$(IncludeSymbols)' == '' ">true</IncludeSymbols>
    <PackageOutputPath>$(NupkgOutputDirectory)</PackageOutputPath>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>

  <Target Name="PackProject"
          AfterTargets="Build;Rebuild"
          DependsOnTargets="Pack"
          Condition=" '$(EnablePackTarget)' == 'true' AND '$(CustomPack)' != 'true' ">

    <Message Text="Created nupkg for $(ProjectName)" Importance="high" />
  </Target>
</Project>
